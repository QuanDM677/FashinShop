/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package fashion.store.ui.manager;

import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import fashion.store.dao.CategoryDAO;
import fashion.store.dao.impl.CategoryDAOImpl;
import fashion.store.dao.impl.ProductDAOImpl;
import fashion.store.entity.Category;
import fashion.store.entity.Product;
import fashion.store.util.XDialog;
import fashion.store.util.XIcon;
import fashion.store.dao.ProductDAO;
import fashion.store.ui.manager.controller.ProductController;

/**
 *
 * @author PC
 */
public class ProductManagerJDialog extends javax.swing.JDialog implements ProductController {

    private DefaultComboBoxModel<Category> categoryModel = new DefaultComboBoxModel<>();
    private int currentTabIndex = 0;

    /**
     * Creates new form DrinkManagerJDialog
     */
    public ProductManagerJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cboCategories.setModel(categoryModel); // Gán lại model đúng kiểu
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jtbProductManagerJDialog = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategories = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnChonTatCa = new javax.swing.JButton();
        btnBoChonTatCa = new javax.swing.JButton();
        btnXoaDaChon = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        BtnLamMoi = new javax.swing.JButton();
        BtnSua = new javax.swing.JButton();
        BtnXoa = new javax.swing.JButton();
        BtnThem = new javax.swing.JButton();
        btnFirst = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        rdoSan = new javax.swing.JRadioButton();
        rdoHet = new javax.swing.JRadioButton();
        cboCategories = new javax.swing.JComboBox();
        txtMaSanPham = new javax.swing.JTextField();
        sldGiamGia = new javax.swing.JSlider();
        txtTenSanPham = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        txtPhanTram = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý sản phẩm");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Loại sản phẩm"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCategories);

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Giảm giá", "Trạng thái", "Chọn"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProduct);

        btnChonTatCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/accept.png"))); // NOI18N
        btnChonTatCa.setText("Chọn tất cả");
        btnChonTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonTatCaActionPerformed(evt);
            }
        });

        btnBoChonTatCa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        btnBoChonTatCa.setText("Bỏ chọn tất cả");
        btnBoChonTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBoChonTatCaActionPerformed(evt);
            }
        });

        btnXoaDaChon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        btnXoaDaChon.setText("Xóa các mục chọn");
        btnXoaDaChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaDaChonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(btnChonTatCa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBoChonTatCa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXoaDaChon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChonTatCa)
                    .addComponent(btnBoChonTatCa)
                    .addComponent(btnXoaDaChon))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbProductManagerJDialog.addTab("Danh sách", jPanel1);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        BtnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/refresh.png"))); // NOI18N
        BtnLamMoi.setText("Làm mới");
        BtnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLamMoiActionPerformed(evt);
            }
        });

        BtnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/edit.png"))); // NOI18N
        BtnSua.setText("Cập nhập");
        BtnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSuaActionPerformed(evt);
            }
        });

        BtnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash.png"))); // NOI18N
        BtnXoa.setText("Xóa");
        BtnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnXoaActionPerformed(evt);
            }
        });

        BtnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        BtnThem.setText("Tạo mới");
        BtnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnThemActionPerformed(evt);
            }
        });

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Fisrt.png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/last.png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/next.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BtnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSua))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnSua)
                            .addComponent(BtnThem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnLamMoi)
                            .addComponent(BtnXoa)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnNext)
                            .addComponent(btnBack))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLast, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );

        jLabel2.setText("Mã sản phẩm");

        jLabel3.setText("Tên sản phẩm");

        jLabel4.setText("Đơn giá");

        jLabel5.setText("Giảm giá");

        jLabel6.setText("Loại");

        jLabel7.setText("Trạng thái");

        buttonGroup1.add(rdoSan);
        rdoSan.setSelected(true);
        rdoSan.setText("Còn hàng");

        buttonGroup1.add(rdoHet);
        rdoHet.setText("Hết hàng");
        rdoHet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoHetActionPerformed(evt);
            }
        });

        cboCategories.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Áo", "Item 2", "Item 3", "Item 4" }));
        cboCategories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCategoriesActionPerformed(evt);
            }
        });

        txtMaSanPham.setEnabled(false);

        sldGiamGia.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                sldGiamGiaAncestorMoved(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        sldGiamGia.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldGiamGiaStateChanged(evt);
            }
        });

        txtPhanTram.setText("0%");

        lblImage.setFont(new java.awt.Font("Segoe UI", 0, 1)); // NOI18N
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/catloveu.png"))); // NOI18N
        lblImage.setText("jLabel1");
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImageMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboCategories, 0, 192, Short.MAX_VALUE)
                            .addComponent(txtMaSanPham)
                            .addComponent(txtDonGia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(rdoSan, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(rdoHet, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)))
                                .addGap(30, 30, 30))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(sldGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPhanTram, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sldGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhanTram)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoSan)
                            .addComponent(rdoHet)
                            .addComponent(cboCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtbProductManagerJDialog.addTab("Biểu mẫu", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jtbProductManagerJDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtbProductManagerJDialog, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriesMouseClicked
        this.fillToTable();
        tblProduct.clearSelection(); // clear chọn dòng khi đổi loại
        setEditable(false); // disable các nút sửa/xóa
    }//GEN-LAST:event_tblCategoriesMouseClicked

    private void btnChonTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonTatCaActionPerformed
        this.checkAll();
    }//GEN-LAST:event_btnChonTatCaActionPerformed

    private void btnBoChonTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBoChonTatCaActionPerformed
        this.uncheckAll();
    }//GEN-LAST:event_btnBoChonTatCaActionPerformed

    private void btnXoaDaChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaDaChonActionPerformed
        this.deleteCheckedItems();
    }//GEN-LAST:event_btnXoaDaChonActionPerformed

    private void BtnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLamMoiActionPerformed
        this.clear();
    }//GEN-LAST:event_BtnLamMoiActionPerformed

    private void BtnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSuaActionPerformed
        this.update();
    }//GEN-LAST:event_BtnSuaActionPerformed

    private void BtnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_BtnXoaActionPerformed

    private void BtnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnThemActionPerformed
        this.create();
    }//GEN-LAST:event_BtnThemActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.moveFirst();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.movePrevious();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.moveLast();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.moveNext();
    }//GEN-LAST:event_btnNextActionPerformed

    private void rdoHetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoHetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoHetActionPerformed

    private void sldGiamGiaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_sldGiamGiaAncestorMoved

    }//GEN-LAST:event_sldGiamGiaAncestorMoved

    private void sldGiamGiaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldGiamGiaStateChanged
        txtPhanTram.setText(sldGiamGia.getValue() + "%");
    }//GEN-LAST:event_sldGiamGiaStateChanged

    private void lblImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseClicked
        this.chooseFile();
    }//GEN-LAST:event_lblImageMouseClicked

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        int row = tblProduct.getSelectedRow();
        if (evt.getClickCount() == 2) {
            edit();
        } else if (evt.getClickCount() == 1 && row >= 0 && items != null && row < items.size()) {
            setForm(items.get(row));
            setEditable(true);
        }
    }//GEN-LAST:event_tblProductMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.open();
    }//GEN-LAST:event_formWindowOpened

    private void cboCategoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCategoriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboCategoriesActionPerformed

    private List<Category> categories;
    private List<Product> items;
    private ProductDAO dao = new ProductDAOImpl();
    private final JFileChooser fileChooser = new JFileChooser();

    public void open() {
        setLocationRelativeTo(null);
        fillCategories();
        fillToTable();
        jtbProductManagerJDialog.setSelectedIndex(0); // <-- tab Biểu mẫu
        currentTabIndex = 0;
        clear(); // clear sẽ gọi setEditable(false)
        jtbProductManagerJDialog.addChangeListener(e -> {
            currentTabIndex = jtbProductManagerJDialog.getSelectedIndex();
            if (currentTabIndex == 0) {
                clear();
            } else if (currentTabIndex == 1) {
                int row = tblProduct.getSelectedRow();
                if (row >= 0 && items != null && row < items.size()) {
                    setForm(items.get(row));
                    setEditable(true);
                } else {
                    clear();
                }
            }
        });
    }

    public void fillCategories() {
        categoryModel.removeAllElements();
        DefaultTableModel tblModel = (DefaultTableModel) tblCategories.getModel();
        tblModel.setRowCount(0);
        CategoryDAO cdao = new CategoryDAOImpl();
        categories = cdao.findAll();
        for (Category category : categories) {
            categoryModel.addElement(category);
            tblModel.addRow(new Object[]{category.getName()});
        }
        if (!categories.isEmpty()) {
            tblCategories.setRowSelectionInterval(0, 0);
        }
    }

    public void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tblProduct.getModel();
        model.setRowCount(0);
        if (categories == null || categories.isEmpty()) {
            return;
        }
        int idx = tblCategories.getSelectedRow() >= 0 ? tblCategories.getSelectedRow() : 0;
        Category category = categories.get(idx);
        items = dao.findByCategoryId(category.getId());
        for (Product item : items) {
            Object[] row = {
                item.getId(),
                item.getName(),
                item.getUnitPrice(),
                (int) (item.getDiscount() * 100) + "%",
                item.isAvailable() ? "Còn hàng" : "Hết hàng",
                false
            };
            model.addRow(row);
        }
    }

    private boolean isDuplicateId(String id) {
        // Nếu đã tồn tại đồ uống với id này trong DB
        Product d = dao.findById(id); // Bạn cần có hàm findById trong DAO
        return d != null;
    }

    public boolean validateProduct(Product product) {
        if (product.getName() == null || product.getName().isBlank()) {
            XDialog.warning("Tên sản phẩm không được để trống!");
            return false;
        }
        if (product.getUnitPrice() < 0) {
            XDialog.warning("Giá sản phẩm không được âm hoặc chứa ký tự!");
            return false;
        }
        if (product.getUnitPrice() == 0) {
            XDialog.warning("Giá sản phẩm phải lớn hơn 0!");
            return false;
        }
//        String imageName = lblImage.getToolTipText();
//        if (imageName == null || imageName.trim().isEmpty() || imageName.equals("product.png")) {
//            XDialog.warning("Vui lòng chọn ảnh cho đồ uống!");
//            lblImage.requestFocus();
//            return false;
//        }
        return true;
    }

    public Product getForm() {
        Product product = new Product();
        product.setId(txtMaSanPham.getText());
        product.setName(txtTenSanPham.getText());
        try {
            double price = Double.parseDouble(txtDonGia.getText());
            product.setUnitPrice(price);
        } catch (Exception e) {
            product.setUnitPrice(-1); // SỬA: Để validate sẽ báo lỗi
        }
        product.setDiscount(sldGiamGia.getValue() / 100.0);
        product.setAvailable(rdoSan.isSelected());
        Object selected = cboCategories.getSelectedItem();
        if (selected instanceof Category) {
            product.setCategoryId(((Category) selected).getId());
        } else {
            product.setCategoryId(null);
        }
        String image = lblImage.getToolTipText();
        product.setImage(image != null && !image.isBlank() ? image : "product.png");
        return product;
    }

    public void setForm(Product product) {
        txtMaSanPham.setText(product.getId());
        txtTenSanPham.setText(product.getName());
        txtDonGia.setText(String.valueOf(product.getUnitPrice()));
        sldGiamGia.setValue((int) (product.getDiscount() * 100));
        txtPhanTram.setText((int) (product.getDiscount() * 100) + "%");
        rdoSan.setSelected(!product.isAvailable());
        rdoHet.setSelected(product.isAvailable());
        for (int i = 0; i < cboCategories.getItemCount(); i++) {
            Object obj = cboCategories.getItemAt(i);
            if (obj instanceof Category) {
                Category cat = (Category) obj;
                if (cat.getId().equals(product.getCategoryId())) {
                    cboCategories.setSelectedIndex(i);
                    break;
                }
            }
        }
        // SỬA ĐOẠN NÀY:
        String imageName = (product.getImage() != null && !product.getImage().isBlank()) ? product.getImage() : "catloveu.png";
        lblImage.setToolTipText(imageName);

        java.io.File imgFile = new java.io.File("images", imageName);
        if (imgFile.exists()) {
            lblImage.setIcon(new javax.swing.ImageIcon(imgFile.getAbsolutePath()));
        } else {
            java.net.URL iconURL = getClass().getResource("/img/catloveu.png");
            if (iconURL != null) {
                lblImage.setIcon(new javax.swing.ImageIcon(iconURL));
            } else {
                // Nếu vẫn không có ảnh, set icon về null để tránh lỗi hiển thị
                lblImage.setIcon(null);
            }
        }
    }

    @Override
    public void clear() {
        Product entity = new Product();
        entity.setId(generateProductId()); // Gán mã tự động khi làm mới
        this.setForm(entity);
        setEditable(false);
        tblProduct.clearSelection();
    }

    @Override
    public void create() {
        Product entity = getForm();
        entity.setId(generateProductId()); // Gán mã tự động
        if (!validateProduct(entity)) {
            return;
        }
        try {
            dao.create(entity);
            fillToTable();
            clear();
            XDialog.success("Thêm sản phẩm thành công!");
        } catch (Exception ex) {
            XDialog.error("Lỗi khi thêm sản phẩm: " + ex.getMessage());
        }
    }

    public void update() {
        Product entity = getForm();
        if (!validateProduct(entity)) {
            return;
        }
        try {
            dao.update(entity);
            fillToTable();
            XDialog.success("Cập nhật thành công!");
        } catch (Exception ex) {
            XDialog.error("Lỗi khi cập nhật: " + ex.getMessage());
        }
    }

    public void delete() {
        int row = tblProduct.getSelectedRow();
        if (row >= 0 && items != null && row < items.size()) {
            if (!XDialog.confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?")) {
                return;
            }
            String id = items.get(row).getId();
            try {
                dao.deleteById(id);
                fillToTable();
                clear();
                XDialog.success("Đã xóa sản phẩm!");
            } catch (Exception ex) {
                XDialog.error("Lỗi khi xóa: " + ex.getMessage());
            }
        } else {
            XDialog.alert("Vui lòng chọn sản phẩm cần xóa!");
        }
    }

    public void edit() {
        int row = tblProduct.getSelectedRow();
        if (row >= 0 && items != null && row < items.size()) {
            Product entity = items.get(row);
            setForm(entity);
            setEditable(true); // Đúng: đang sửa!
            jtbProductManagerJDialog.setSelectedIndex(1);
            currentTabIndex = 1;
        }
    }

    public void setEditable(boolean editable) {
        BtnThem.setEnabled(!editable);
        BtnSua.setEnabled(editable);
        BtnXoa.setEnabled(editable);

        int rowCount = tblProduct.getRowCount();
        boolean nav = rowCount > 0;
        btnFirst.setEnabled(nav);
        btnBack.setEnabled(nav);
        btnNext.setEnabled(nav);
        btnLast.setEnabled(nav);
    }

    // Navigation
    public void moveTo(int index) {
        int rowCount = tblProduct.getRowCount();
        if (rowCount == 0) {
            return;
        }
        if (index < 0) {
            index = rowCount - 1;
        }
        if (index >= rowCount) {
            index = 0;
        }
        tblProduct.setRowSelectionInterval(index, index);
        setForm(items.get(index));
        setEditable(true);
    }

    public void moveFirst() {
        moveTo(0);
    }

    public void movePrevious() {
        moveTo(tblProduct.getSelectedRow() - 1);
    }

    public void moveNext() {
        moveTo(tblProduct.getSelectedRow() + 1);
    }

    public void moveLast() {
        moveTo(tblProduct.getRowCount() - 1);
    }

    // Select all, unselect all, delete selected
    public void checkAll() {
        setCheckedAll(true);
    }

    public void uncheckAll() {
        setCheckedAll(false);
    }

    private void setCheckedAll(boolean checked) {
        for (int i = 0; i < tblProduct.getRowCount(); i++) {
            tblProduct.setValueAt(checked, i, 5); // cột 5 là checkbox
        }
    }

    public void deleteCheckedItems() {
        // Đếm số mục được chọn
        int cnt = 0;
        for (int i = 0; i < tblProduct.getRowCount(); i++) {
            Boolean checked = (Boolean) tblProduct.getValueAt(i, 5);
            if (checked != null && checked) {
                cnt++;
            }
        }
        if (cnt == 0) {
            XDialog.alert("Vui lòng chọn ít nhất một sản phẩm để xóa!");
            return;
        }
        if (!XDialog.confirm("Bạn có chắc chắn muốn xóa " + cnt + " sản phẩm đã chọn?")) {
            return;
        }
        int deleted = 0;
        for (int i = 0; i < tblProduct.getRowCount(); i++) {
            Boolean checked = (Boolean) tblProduct.getValueAt(i, 5);
            if (checked != null && checked) {
                try {
                    dao.deleteById(items.get(i).getId());
                    deleted++;
                } catch (Exception ex) {
                    XDialog.error("Lỗi khi xóa mã: " + items.get(i).getId() + " - " + ex.getMessage());
                }
            }
        }
        fillToTable();
        XDialog.success("Đã xóa " + deleted + " mục.");
    }

    // Chọn file ảnh
    public void chooseFile() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            File file = XIcon.copyTo(selectedFile, "img");
            lblImage.setToolTipText(file.getName());
            XIcon.setIcon(lblImage, file);
        }
    }

    private String generateProductId() {
        List<Product> products = dao.findAll();
        int maxId = 0;
        for (Product product : products) {
            String id = product.getId().replace("SP", ""); // Loại bỏ tiền tố "SP"
            try {
                int num = Integer.parseInt(id);
                if (num > maxId) {
                    maxId = num;
                }
            } catch (NumberFormatException e) {
                // Bỏ qua nếu ID không đúng định dạng
            }
        }
        return String.format("SP%03d", maxId + 1); // Tạo mã mới, ví dụ: SP001
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductManagerJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductManagerJDialog dialog = new ProductManagerJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLamMoi;
    private javax.swing.JButton BtnSua;
    private javax.swing.JButton BtnThem;
    private javax.swing.JButton BtnXoa;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBoChonTatCa;
    private javax.swing.JButton btnChonTatCa;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnXoaDaChon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboCategories;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jtbProductManagerJDialog;
    private javax.swing.JLabel lblImage;
    private javax.swing.JRadioButton rdoHet;
    private javax.swing.JRadioButton rdoSan;
    private javax.swing.JSlider sldGiamGia;
    private javax.swing.JTable tblCategories;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JLabel txtPhanTram;
    private javax.swing.JTextField txtTenSanPham;
    // End of variables declaration//GEN-END:variables
}
